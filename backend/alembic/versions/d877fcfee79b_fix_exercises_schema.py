"""Fix exercises schema

Revision ID: d877fcfee79b
Revises: 
Create Date: 2025-03-11 18:47:55.167099

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd877fcfee79b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lesson_students')
    op.drop_table('users')
    op.add_column('exercises', sa.Column('scrambled_text', sa.Text(), nullable=True))
    op.add_column('exercises', sa.Column('correct_order', sa.ARRAY(sa.String()), nullable=True))
    op.add_column('exercises', sa.Column('word_bank', sa.ARRAY(sa.String()), nullable=True))
    op.alter_column('exercises', 'correct_answer',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=False)
    op.alter_column('exercises', 'options',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=True)
    op.create_index(op.f('ix_exercises_id'), 'exercises', ['id'], unique=False)
    op.alter_column('lessons', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('lessons', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_lessons_id'), 'lessons', ['id'], unique=False)
    op.create_index(op.f('ix_lessons_title'), 'lessons', ['title'], unique=False)
    op.drop_constraint('lessons_owner_id_fkey', 'lessons', type_='foreignkey')
    op.drop_column('lessons', 'owner_id')
    op.drop_column('lessons', 'created_at')
    op.add_column('submissions', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('submissions', sa.Column('user_answer', sa.Text(), nullable=False))
    op.alter_column('submissions', 'score',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_submissions_id'), 'submissions', ['id'], unique=False)
    op.drop_constraint('submissions_student_id_fkey', 'submissions', type_='foreignkey')
    op.drop_column('submissions', 'answer')
    op.drop_column('submissions', 'student_id')
    op.drop_column('submissions', 'submitted_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('submissions', sa.Column('submitted_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('submissions', sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('submissions', sa.Column('answer', sa.TEXT(), autoincrement=False, nullable=True))
    op.create_foreign_key('submissions_student_id_fkey', 'submissions', 'users', ['student_id'], ['id'])
    op.drop_index(op.f('ix_submissions_id'), table_name='submissions')
    op.alter_column('submissions', 'score',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('submissions', 'user_answer')
    op.drop_column('submissions', 'user_id')
    op.add_column('lessons', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('lessons', sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('lessons_owner_id_fkey', 'lessons', 'users', ['owner_id'], ['id'])
    op.drop_index(op.f('ix_lessons_title'), table_name='lessons')
    op.drop_index(op.f('ix_lessons_id'), table_name='lessons')
    op.alter_column('lessons', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('lessons', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index(op.f('ix_exercises_id'), table_name='exercises')
    op.alter_column('exercises', 'options',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('exercises', 'correct_answer',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False)
    op.drop_column('exercises', 'word_bank')
    op.drop_column('exercises', 'correct_order')
    op.drop_column('exercises', 'scrambled_text')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('username', name='users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('lesson_students',
    sa.Column('lesson_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], name='lesson_students_lesson_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], name='lesson_students_student_id_fkey'),
    sa.PrimaryKeyConstraint('lesson_id', 'student_id', name='lesson_students_pkey')
    )
    # ### end Alembic commands ###
